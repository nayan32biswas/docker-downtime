version: "3.7"

# environment
x-volumes: &env-volume
  ALLOWED_HOSTS: "http://localhost:8000,http://localhost"
  SECRET_KEY: "askrrt23fui4y5t9frhnijqwehry2fg349roimhewdirfjhw3784ryt"

  REDIS_LOCAL_URL: "redis://redis:6379/1"


services:
  api:
    build:
      context: ./
      dockerfile: ./Dockerfile
    # image: nayan32biswas/docker_downtime:latest
    # container_name: docker_downtime_server
    # command: /app/server/server.sh
    # command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    # command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4
    # command: gunicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4 --worker-class
    command: gunicorn app.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    # command: ./server.sh
    ports:
      - 8000:8000
    environment:
      <<: *env-volume
    healthcheck:
      test: curl -sS http://0.0.0.0:8000 || exit 1
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 30s
    volumes:
      - ./:/app/server/
    depends_on:
      - redis
    networks:
      - docker_downtime-backend-tier

  nginx:
    depends_on:
      - api
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - "./nginx/:/etc/nginx/conf.d"
      - "/var/log/nginx:/var/log/nginx"
    networks:
      - docker_downtime-backend-tier

  redis:
    image: redis:6
    container_name: docker_downtime_redis
    # restart: unless-stopped
    networks:
      - docker_downtime-backend-tier
    volumes:
      - docker_downtime-redis:/data

volumes:
  docker_downtime-redis:
    driver: local

networks:
  docker_downtime-backend-tier:
    driver: bridge
