version: "3.7"
x-volumes: &env-volume
  PORT: "8000"

services:
  api:
    build:
      context: ./
      dockerfile: ./Dockerfile
    image: nayan32biswas/docker_downtime:latest
    container_name: docker_downtime_server
    # command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4 --reload
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 1
    # command: gunicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4 --worker-class
    # command: gunicorn app.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    ports:
      - "8000:8000"
    expose:
      - "8000"
    environment:
      <<: *env-volume
    healthcheck:
      test: curl -sS http://0.0.0.0:8000 || exit 1
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 30s
    volumes:
      - ./:/app/server/
    depends_on:
      - redis
    networks:
      - docker_downtime-backend-tier

  backup_api:
    image: nayan32biswas/docker_downtime:latest
    container_name: docker_downtime_server_backup
    # command: gunicorn app.main:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:9000
    command: uvicorn app.main:app --host 0.0.0.0 --port 9000 --workers 1
    ports:
      - "9000:9000"
    expose:
      - "9000"
    environment:
      PORT: "9000"

    volumes:
      - ./:/app/server/
    depends_on:
      - redis
    networks:
      - docker_downtime-backend-tier

  nginx:
    # This is for testing
    depends_on:
      - api
      - backup_api
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - "./nginx/:/etc/nginx/conf.d"
      - "/var/log/nginx:/var/log/nginx"
    networks:
      - docker_downtime-backend-tier

  redis:
    image: redis:6
    container_name: docker_downtime_redis
    # restart: unless-stopped
    networks:
      - docker_downtime-backend-tier
    volumes:
      - docker_downtime-redis:/data

volumes:
  docker_downtime-redis:
    driver: local

networks:
  docker_downtime-backend-tier:
    driver: bridge
